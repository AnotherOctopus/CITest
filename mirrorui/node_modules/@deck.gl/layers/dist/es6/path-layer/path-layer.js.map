{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["COORDINATE_SYSTEM","Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","vs64","fs","DEFAULT_COLOR","defaultProps","widthScale","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","dashJustified","getPath","object","path","getColor","getWidth","getDashArray","isClosed","firstPoint","lastPoint","length","ATTRIBUTE_TRANSITION","enter","value","chunk","subarray","PathLayer","getShaders","use64bitProjection","modules","initializeState","attributeManager","getAttributeManager","addInstanced","instanceStartPositions","size","transition","accessor","update","calculateStartPositions","instanceEndPositions","calculateEndPositions","instanceLeftDeltas","calculateLeftDeltas","instanceRightDeltas","calculateRightDeltas","instanceStrokeWidths","calculateStrokeWidths","defaultValue","instanceDashArrays","calculateDashArrays","instanceColors","type","UNSIGNED_BYTE","calculateColors","instancePickingColors","calculatePickingColors","updateAttribute","props","oldProps","changeFlags","invalidateAll","coordinateSystem","LNGLAT","instanceStartEndPositions64xyLow","calculateInstanceStartEndPositions64xyLow","remove","updateState","gl","context","state","model","delete","setState","_getModel","geometryChanged","dataChanged","updateTriggersChanged","all","paths","data","map","bufferLayout","numInstances","reduce","count","segments","draw","uniforms","render","Object","assign","jointType","alignMode","SEGMENT_INDICES","SEGMENT_POSITIONS","id","geometry","drawMode","TRIANGLES","attributes","indices","Uint16Array","positions","Float32Array","isInstanced","shaderCache","_getPathLength","attribute","i","forEach","numSegments","ptIndex","point","startPoint","endPoint","prevPoint","nextPoint","index","width","pathLength","dashArray","pointColor","isNaN","pickingColor","encodePickingColor","layerName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,iBAAR,EAA2BC,KAA3B,QAAuC,eAAvC;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,IAAzB,QAAoC,SAApC;MACOC,W,GAAeD,I,CAAfC,W;AAEP,OAAOC,EAAP,MAAe,0BAAf;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,EAAP,MAAe,4BAAf;AAEA,MAAMC,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAAtB;AAEA,MAAMC,eAAe;AACnBC,cAAY,CADO;AACJ;AACfC,kBAAgB,CAFG;AAEA;AACnBC,kBAAgBC,OAAOC,gBAHJ;AAGsB;AACzCC,WAAS,KAJU;AAKnBC,cAAY,CALO;AAMnBb,QAAM,KANa;AAOnBc,iBAAe,KAPI;AASnBC,WAASC,UAAUA,OAAOC,IATP;AAUnBC,YAAUb,aAVS;AAWnBc,YAAU,CAXS;AAYnBC,gBAAc;AAZK,CAArB;;AAeA,MAAMC,WAAWJ,QAAQ;AACvB,QAAMK,aAAaL,KAAK,CAAL,CAAnB;AACA,QAAMM,YAAYN,KAAKA,KAAKO,MAAL,GAAc,CAAnB,CAAlB;AACA,SACEF,WAAW,CAAX,MAAkBC,UAAU,CAAV,CAAlB,IACAD,WAAW,CAAX,MAAkBC,UAAU,CAAV,CADlB,IAEAD,WAAW,CAAX,MAAkBC,UAAU,CAAV,CAHpB;AAKD,CARD;;AAUA,MAAME,uBAAuB;AAC3BC,SAAO,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvB,WAAOA,MAAMJ,MAAN,GAAeI,MAAMC,QAAN,CAAeD,MAAMJ,MAAN,GAAeG,MAAMH,MAApC,CAAf,GAA6DG,KAApE;AACD;AAH0B,CAA7B;AAMA,eAAe,MAAMG,SAAN,SAAwBlC,KAAxB,CAA8B;AAC3CmC,eAAa;AACX,WAAO,KAAKC,kBAAL,KACH;AAAC9B,UAAIC,IAAL;AAAWC,QAAX;AAAe6B,eAAS,CAAC,WAAD,EAAc,SAAd;AAAxB,KADG,GAEH;AAAC/B,QAAD;AAAKE,QAAL;AAAS6B,eAAS,CAAC,SAAD;AAAlB,KAFJ,CADW,CAGyB;AACrC;;AAEDC,oBAAkB;AAChB,UAAMC,mBAAmB,KAAKC,mBAAL,EAAzB;AACA;;AACAD,qBAAiBE,YAAjB,CAA8B;AAC5BC,8BAAwB;AACtBC,cAAM,CADgB;AAEtBC,oBAAYf,oBAFU;AAGtBgB,kBAAU,SAHY;AAItBC,gBAAQ,KAAKC;AAJS,OADI;AAO5BC,4BAAsB;AACpBL,cAAM,CADc;AAEpBC,oBAAYf,oBAFQ;AAGpBgB,kBAAU,SAHU;AAIpBC,gBAAQ,KAAKG;AAJO,OAPM;AAa5BC,0BAAoB;AAACP,cAAM,CAAP;AAAUG,gBAAQ,KAAKK;AAAvB,OAbQ;AAc5BC,2BAAqB;AAACT,cAAM,CAAP;AAAUG,gBAAQ,KAAKO;AAAvB,OAdO;AAe5BC,4BAAsB;AACpBX,cAAM,CADc;AAEpBE,kBAAU,UAFU;AAGpBD,oBAAYf,oBAHQ;AAIpBiB,gBAAQ,KAAKS,qBAJO;AAKpBC,sBAAc;AALM,OAfM;AAsB5BC,0BAAoB;AAACd,cAAM,CAAP;AAAUE,kBAAU,cAApB;AAAoCC,gBAAQ,KAAKY;AAAjD,OAtBQ;AAuB5BC,sBAAgB;AACdhB,cAAM,CADQ;AAEdiB,cAAM3D,GAAG4D,aAFK;AAGdhB,kBAAU,UAHI;AAIdD,oBAAYf,oBAJE;AAKdiB,gBAAQ,KAAKgB,eALC;AAMdN,sBAAc/C;AANA,OAvBY;AA+B5BsD,6BAAuB;AAACpB,cAAM,CAAP;AAAUiB,cAAM3D,GAAG4D,aAAnB;AAAkCf,gBAAQ,KAAKkB;AAA/C;AA/BK,KAA9B;AAiCA;AACD;;AAEDC,kBAAgB;AAACC,SAAD;AAAQC,YAAR;AAAkBC;AAAlB,GAAhB,EAAgD;AAC9C,QAAIF,MAAM9D,IAAN,KAAe+D,SAAS/D,IAA5B,EAAkC;AAChC,YAAMmC,mBAAmB,KAAKC,mBAAL,EAAzB;AACAD,uBAAiB8B,aAAjB;;AAEA,UAAIH,MAAM9D,IAAN,IAAc8D,MAAMI,gBAAN,KAA2BvE,kBAAkBwE,MAA/D,EAAuE;AACrEhC,yBAAiBE,YAAjB,CAA8B;AAC5B+B,4CAAkC;AAChC7B,kBAAM,CAD0B;AAEhCG,oBAAQ,KAAK2B;AAFmB;AADN,SAA9B;AAMD,OAPD,MAOO;AACLlC,yBAAiBmC,MAAjB,CAAwB,CAAC,kCAAD,CAAxB;AACD;AACF;AACF;;AAEDC,cAAY;AAACR,YAAD;AAAWD,SAAX;AAAkBE;AAAlB,GAAZ,EAA4C;AAC1C,UAAMO,WAAN,CAAkB;AAACT,WAAD;AAAQC,cAAR;AAAkBC;AAAlB,KAAlB;AAD0C,UAGnCjD,OAHmC,GAGxB,KAAK+C,KAHmB,CAGnC/C,OAHmC;AAI1C,UAAMoB,mBAAmB,KAAKC,mBAAL,EAAzB;;AACA,QAAI0B,MAAM9D,IAAN,KAAe+D,SAAS/D,IAA5B,EAAkC;AAAA,YACzBwE,EADyB,GACnB,KAAKC,OADc,CACzBD,EADyB;;AAEhC,UAAI,KAAKE,KAAL,CAAWC,KAAf,EAAsB;AACpB,aAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB;AACD;;AACD,WAAKC,QAAL,CAAc;AAACF,eAAO,KAAKG,SAAL,CAAeN,EAAf;AAAR,OAAd;AACD;;AACD,SAAKX,eAAL,CAAqB;AAACC,WAAD;AAAQC,cAAR;AAAkBC;AAAlB,KAArB;AAEA,UAAMe,kBACJf,YAAYgB,WAAZ,IACChB,YAAYiB,qBAAZ,KACEjB,YAAYiB,qBAAZ,CAAkCC,GAAlC,IAAyClB,YAAYiB,qBAAZ,CAAkClE,OAD7E,CAFH;;AAKA,QAAIgE,eAAJ,EAAqB;AACnB;AACA,YAAMI,QAAQrB,MAAMsB,IAAN,CAAWC,GAAX,CAAetE,OAAf,CAAd;AACA,YAAMuE,eAAeH,MAAME,GAAN,CAAUpE,QAAQA,KAAKO,MAAL,GAAc,CAAhC,CAArB;AACA,YAAM+D,eAAeD,aAAaE,MAAb,CAAoB,CAACC,KAAD,EAAQC,QAAR,KAAqBD,QAAQC,QAAjD,EAA2D,CAA3D,CAArB;AAEA,WAAKb,QAAL,CAAc;AACZM,aADY;AAEZI,oBAFY;AAGZD;AAHY,OAAd;AAKAnD,uBAAiB8B,aAAjB;AACD;AACF;;AAED0B,OAAK;AAACC;AAAD,GAAL,EAAiB;AAAA,wBAQX,KAAK9B,KARM;AAAA,UAEblD,OAFa,eAEbA,OAFa;AAAA,UAGbC,UAHa,eAGbA,UAHa;AAAA,UAIbN,UAJa,eAIbA,UAJa;AAAA,UAKbC,cALa,eAKbA,cALa;AAAA,UAMbC,cANa,eAMbA,cANa;AAAA,UAObK,aAPa,eAObA,aAPa;AAUf,SAAK4D,KAAL,CAAWC,KAAX,CAAiBkB,MAAjB,CACEC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,QAAlB,EAA4B;AAC1BI,iBAAWtF,OAAOE,OAAP,CADe;AAE1BqF,iBAAWvF,OAAOI,aAAP,CAFe;AAG1BP,gBAH0B;AAI1BM,gBAJ0B;AAK1BL,oBAL0B;AAM1BC;AAN0B,KAA5B,CADF;AAUD;;AAEDqE,YAAUN,EAAV,EAAc;AACZ;;;;;;;;;;;;;;AAeA,UAAM0B,kBAAkB,CACtB;AACA,KAFsB,EAGtB,CAHsB,EAItB,CAJsB,EAKtB;AACA,KANsB,EAOtB,CAPsB,EAQtB,CARsB,EAStB,CATsB,EAUtB,CAVsB,EAWtB,CAXsB,EAYtB;AACA,KAbsB,EActB,CAdsB,EAetB,CAfsB,CAAxB,CAhBY,CAkCZ;AACA;AACA;;AACA,UAAMC,oBAAoB,CACxB;AACA,KAFwB,EAGxB,CAHwB,EAIxB,CAJwB,EAKxB;AACA,KANwB,EAOxB,CAAC,CAPuB,EAQxB,CARwB,EASxB;AACA,KAVwB,EAWxB,CAXwB,EAYxB,CAZwB,EAaxB;AACA,KAdwB,EAexB,CAAC,CAfuB,EAgBxB,CAhBwB,EAiBxB;AACA,KAlBwB,EAmBxB,CAnBwB,EAoBxB,CApBwB,EAqBxB;AACA,KAtBwB,EAuBxB,CAvBwB,EAwBxB,CAxBwB,CAA1B;AA2BA,WAAO,IAAIrG,KAAJ,CACL0E,EADK,EAELsB,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKhE,UAAL,EAAlB,EAAqC;AACnCqE,UAAI,KAAKtC,KAAL,CAAWsC,EADoB;AAEnCC,gBAAU,IAAItG,QAAJ,CAAa;AACrBuG,kBAAUzG,GAAG0G,SADQ;AAErBC,oBAAY;AACVC,mBAAS,IAAIC,WAAJ,CAAgBR,eAAhB,CADC;AAEVS,qBAAW,IAAIC,YAAJ,CAAiBT,iBAAjB;AAFD;AAFS,OAAb,CAFyB;AASnCU,mBAAa,IATsB;AAUnCC,mBAAa,KAAKrC,OAAL,CAAaqC;AAVS,KAArC,CAFK,CAAP;AAeD,GAvM0C,CAyM3C;;;AACAC,iBAAe9F,IAAf,EAAqB;AACnB,WAAOA,KAAKO,MAAZ;AACD;;AAEDmB,0BAAwBqE,SAAxB,EAAmC;AAAA,wBACH,KAAKtC,KADF;AAAA,UAC1BS,KAD0B,eAC1BA,KAD0B;AAAA,UACnBG,YADmB,eACnBA,YADmB;AAAA,UAE1B3D,KAF0B,GAEjBqF,SAFiB,CAE1BrF,KAF0B;AAIjCqF,cAAU1B,YAAV,GAAyBA,YAAzB;AAEA,QAAI2B,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAcjG,QAAQ;AACpB,YAAMkG,cAAclG,KAAKO,MAAL,GAAc,CAAlC;;AACA,WAAK,IAAI4F,UAAU,CAAnB,EAAsBA,UAAUD,WAAhC,EAA6CC,SAA7C,EAAwD;AACtD,cAAMC,QAAQpG,KAAKmG,OAAL,CAAd;AACAzF,cAAMsF,GAAN,IAAaI,MAAM,CAAN,CAAb;AACA1F,cAAMsF,GAAN,IAAaI,MAAM,CAAN,CAAb;AACA1F,cAAMsF,GAAN,IAAaI,MAAM,CAAN,KAAY,CAAzB;AACD;AACF,KARD;AASD;;AAEDxE,wBAAsBmE,SAAtB,EAAiC;AAAA,yBACD,KAAKtC,KADJ;AAAA,UACxBS,KADwB,gBACxBA,KADwB;AAAA,UACjBG,YADiB,gBACjBA,YADiB;AAAA,UAExB3D,KAFwB,GAEfqF,SAFe,CAExBrF,KAFwB;AAI/BqF,cAAU1B,YAAV,GAAyBA,YAAzB;AAEA,QAAI2B,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAcjG,QAAQ;AACpB,WAAK,IAAImG,UAAU,CAAnB,EAAsBA,UAAUnG,KAAKO,MAArC,EAA6C4F,SAA7C,EAAwD;AACtD,cAAMC,QAAQpG,KAAKmG,OAAL,CAAd;AACAzF,cAAMsF,GAAN,IAAaI,MAAM,CAAN,CAAb;AACA1F,cAAMsF,GAAN,IAAaI,MAAM,CAAN,CAAb;AACA1F,cAAMsF,GAAN,IAAaI,MAAM,CAAN,KAAY,CAAzB;AACD;AACF,KAPD;AAQD;;AAEDhD,4CAA0C2C,SAA1C,EAAqD;AAAA,UAC5C7B,KAD4C,GACnC,KAAKT,KAD8B,CAC5CS,KAD4C;AAAA,UAE5CxD,KAF4C,GAEnCqF,SAFmC,CAE5CrF,KAF4C;AAInD,QAAIsF,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAcjG,QAAQ;AACpB,YAAMkG,cAAclG,KAAKO,MAAL,GAAc,CAAlC;;AACA,WAAK,IAAI4F,UAAU,CAAnB,EAAsBA,UAAUD,WAAhC,EAA6CC,SAA7C,EAAwD;AACtD,cAAME,aAAarG,KAAKmG,OAAL,CAAnB;AACA,cAAMG,WAAWtG,KAAKmG,UAAU,CAAf,CAAjB;AACAzF,cAAMsF,GAAN,IAAahH,YAAYqH,WAAW,CAAX,CAAZ,CAAb;AACA3F,cAAMsF,GAAN,IAAahH,YAAYqH,WAAW,CAAX,CAAZ,CAAb;AACA3F,cAAMsF,GAAN,IAAahH,YAAYsH,SAAS,CAAT,CAAZ,CAAb;AACA5F,cAAMsF,GAAN,IAAahH,YAAYsH,SAAS,CAAT,CAAZ,CAAb;AACD;AACF,KAVD;AAWD;;AAEDxE,sBAAoBiE,SAApB,EAA+B;AAAA,UACtB7B,KADsB,GACb,KAAKT,KADQ,CACtBS,KADsB;AAAA,UAEtBxD,KAFsB,GAEbqF,SAFa,CAEtBrF,KAFsB;AAI7B,QAAIsF,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAcjG,QAAQ;AACpB,YAAMkG,cAAclG,KAAKO,MAAL,GAAc,CAAlC;AACA,UAAIgG,YAAYnG,SAASJ,IAAT,IAAiBA,KAAKA,KAAKO,MAAL,GAAc,CAAnB,CAAjB,GAAyCP,KAAK,CAAL,CAAzD;;AAEA,WAAK,IAAImG,UAAU,CAAnB,EAAsBA,UAAUD,WAAhC,EAA6CC,SAA7C,EAAwD;AACtD,cAAMC,QAAQpG,KAAKmG,OAAL,CAAd;AACAzF,cAAMsF,GAAN,IAAaI,MAAM,CAAN,IAAWG,UAAU,CAAV,CAAxB;AACA7F,cAAMsF,GAAN,IAAaI,MAAM,CAAN,IAAWG,UAAU,CAAV,CAAxB;AACA7F,cAAMsF,GAAN,IAAaI,MAAM,CAAN,IAAWG,UAAU,CAAV,CAAX,IAA2B,CAAxC;AACAA,oBAAYH,KAAZ;AACD;AACF,KAXD;AAYD;;AAEDpE,uBAAqB+D,SAArB,EAAgC;AAAA,UACvB7B,KADuB,GACd,KAAKT,KADS,CACvBS,KADuB;AAAA,UAEvBxD,KAFuB,GAEdqF,SAFc,CAEvBrF,KAFuB;AAI9B,QAAIsF,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAcjG,QAAQ;AACpB,WAAK,IAAImG,UAAU,CAAnB,EAAsBA,UAAUnG,KAAKO,MAArC,EAA6C4F,SAA7C,EAAwD;AACtD,cAAMC,QAAQpG,KAAKmG,OAAL,CAAd;AACA,YAAIK,YAAYxG,KAAKmG,UAAU,CAAf,CAAhB;;AACA,YAAI,CAACK,SAAL,EAAgB;AACdA,sBAAYpG,SAASJ,IAAT,IAAiBA,KAAK,CAAL,CAAjB,GAA2BoG,KAAvC;AACD;;AAED1F,cAAMsF,GAAN,IAAaQ,UAAU,CAAV,IAAeJ,MAAM,CAAN,CAA5B;AACA1F,cAAMsF,GAAN,IAAaQ,UAAU,CAAV,IAAeJ,MAAM,CAAN,CAA5B;AACA1F,cAAMsF,GAAN,IAAaQ,UAAU,CAAV,IAAeJ,MAAM,CAAN,CAAf,IAA2B,CAAxC;AACD;AACF,KAZD;AAaD;;AAEDlE,wBAAsB6D,SAAtB,EAAiC;AAAA,yBACN,KAAKlD,KADC;AAAA,UACxBsB,IADwB,gBACxBA,IADwB;AAAA,UAClBjE,QADkB,gBAClBA,QADkB;AAAA,yBAED,KAAKuD,KAFJ;AAAA,UAExBS,KAFwB,gBAExBA,KAFwB;AAAA,UAEjBG,YAFiB,gBAEjBA,YAFiB;AAAA,UAGxB3D,KAHwB,GAGfqF,SAHe,CAGxBrF,KAHwB;AAK/BqF,cAAU1B,YAAV,GAAyBA,YAAzB;AAEA,QAAI2B,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAc,CAACjG,IAAD,EAAOyG,KAAP,KAAiB;AAC7B,YAAMC,QAAQxG,SAASiE,KAAKsC,KAAL,CAAT,EAAsBA,KAAtB,CAAd;;AAEA,YAAME,aAAa,KAAKb,cAAL,CAAoB9F,IAApB,CAAnB;;AACA,WAAK,IAAImG,UAAU,CAAnB,EAAsBA,UAAUQ,UAAhC,EAA4CR,SAA5C,EAAuD;AACrDzF,cAAMsF,GAAN,IAAaU,KAAb;AACD;AACF,KAPD;AAQD;;AAEDrE,sBAAoB0D,SAApB,EAA+B;AAAA,yBACA,KAAKlD,KADL;AAAA,UACtBsB,IADsB,gBACtBA,IADsB;AAAA,UAChBhE,YADgB,gBAChBA,YADgB;;AAE7B,QAAI,CAACA,YAAL,EAAmB;AACjB;AACD;;AAJ4B,UAMtB+D,KANsB,GAMb,KAAKT,KANQ,CAMtBS,KANsB;AAAA,UAOtBxD,KAPsB,GAObqF,SAPa,CAOtBrF,KAPsB;AAQ7B,QAAIsF,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAc,CAACjG,IAAD,EAAOyG,KAAP,KAAiB;AAC7B,YAAMG,YAAYzG,aAAagE,KAAKsC,KAAL,CAAb,EAA0BA,KAA1B,CAAlB;;AAEA,YAAME,aAAa,KAAKb,cAAL,CAAoB9F,IAApB,CAAnB;;AACA,WAAK,IAAImG,UAAU,CAAnB,EAAsBA,UAAUQ,UAAhC,EAA4CR,SAA5C,EAAuD;AACrDzF,cAAMsF,GAAN,IAAaY,UAAU,CAAV,CAAb;AACAlG,cAAMsF,GAAN,IAAaY,UAAU,CAAV,CAAb;AACD;AACF,KARD;AASD;;AAEDnE,kBAAgBsD,SAAhB,EAA2B;AAAA,yBACA,KAAKlD,KADL;AAAA,UAClBsB,IADkB,gBAClBA,IADkB;AAAA,UACZlE,QADY,gBACZA,QADY;AAAA,yBAEK,KAAKwD,KAFV;AAAA,UAElBS,KAFkB,gBAElBA,KAFkB;AAAA,UAEXG,YAFW,gBAEXA,YAFW;AAAA,UAGlB3D,KAHkB,GAGTqF,SAHS,CAGlBrF,KAHkB;AAKzBqF,cAAU1B,YAAV,GAAyBA,YAAzB;AAEA,QAAI2B,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAc,CAACjG,IAAD,EAAOyG,KAAP,KAAiB;AAC7B,YAAMI,aAAa5G,SAASkE,KAAKsC,KAAL,CAAT,EAAsBA,KAAtB,CAAnB;;AACA,UAAIK,MAAMD,WAAW,CAAX,CAAN,CAAJ,EAA0B;AACxBA,mBAAW,CAAX,IAAgB,GAAhB;AACD;;AAED,YAAMF,aAAa,KAAKb,cAAL,CAAoB9F,IAApB,CAAnB;;AACA,WAAK,IAAImG,UAAU,CAAnB,EAAsBA,UAAUQ,UAAhC,EAA4CR,SAA5C,EAAuD;AACrDzF,cAAMsF,GAAN,IAAaa,WAAW,CAAX,CAAb;AACAnG,cAAMsF,GAAN,IAAaa,WAAW,CAAX,CAAb;AACAnG,cAAMsF,GAAN,IAAaa,WAAW,CAAX,CAAb;AACAnG,cAAMsF,GAAN,IAAaa,WAAW,CAAX,CAAb;AACD;AACF,KAbD;AAcD,GAtW0C,CAwW3C;;;AACAlE,yBAAuBoD,SAAvB,EAAkC;AAAA,UACzB7B,KADyB,GAChB,KAAKT,KADW,CACzBS,KADyB;AAAA,UAEzBxD,KAFyB,GAEhBqF,SAFgB,CAEzBrF,KAFyB;AAIhC,QAAIsF,IAAI,CAAR;AACA9B,UAAM+B,OAAN,CAAc,CAACjG,IAAD,EAAOyG,KAAP,KAAiB;AAC7B,YAAMM,eAAe,KAAKC,kBAAL,CAAwBP,KAAxB,CAArB;;AAEA,YAAME,aAAa,KAAKb,cAAL,CAAoB9F,IAApB,CAAnB;;AACA,WAAK,IAAImG,UAAU,CAAnB,EAAsBA,UAAUQ,UAAhC,EAA4CR,SAA5C,EAAuD;AACrDzF,cAAMsF,GAAN,IAAae,aAAa,CAAb,CAAb;AACArG,cAAMsF,GAAN,IAAae,aAAa,CAAb,CAAb;AACArG,cAAMsF,GAAN,IAAae,aAAa,CAAb,CAAb;AACD;AACF,KATD;AAUD;;AAxX0C;AA2X7ClG,UAAUoG,SAAV,GAAsB,WAAtB;AACApG,UAAUxB,YAAV,GAAyBA,YAAzB","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {COORDINATE_SYSTEM, Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './path-layer-vertex.glsl';\nimport vs64 from './path-layer-vertex-64.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthScale: 1, // stroke width in meters\n  widthMinPixels: 0, //  min stroke width in pixels\n  widthMaxPixels: Number.MAX_SAFE_INTEGER, // max stroke width in pixels\n  rounded: false,\n  miterLimit: 4,\n  fp64: false,\n  dashJustified: false,\n\n  getPath: object => object.path,\n  getColor: DEFAULT_COLOR,\n  getWidth: 1,\n  getDashArray: null\n};\n\nconst isClosed = path => {\n  const firstPoint = path[0];\n  const lastPoint = path[path.length - 1];\n  return (\n    firstPoint[0] === lastPoint[0] &&\n    firstPoint[1] === lastPoint[1] &&\n    firstPoint[2] === lastPoint[2]\n  );\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceStartPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateStartPositions\n      },\n      instanceEndPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateEndPositions\n      },\n      instanceLeftDeltas: {size: 3, update: this.calculateLeftDeltas},\n      instanceRightDeltas: {size: 3, update: this.calculateRightDeltas},\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        update: this.calculateStrokeWidths,\n        defaultValue: 1\n      },\n      instanceDashArrays: {size: 2, accessor: 'getDashArray', update: this.calculateDashArrays},\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        update: this.calculateColors,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {size: 3, type: GL.UNSIGNED_BYTE, update: this.calculatePickingColors}\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateAttribute({props, oldProps, changeFlags}) {\n    if (props.fp64 !== oldProps.fp64) {\n      const attributeManager = this.getAttributeManager();\n      attributeManager.invalidateAll();\n\n      if (props.fp64 && props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n        attributeManager.addInstanced({\n          instanceStartEndPositions64xyLow: {\n            size: 4,\n            update: this.calculateInstanceStartEndPositions64xyLow\n          }\n        });\n      } else {\n        attributeManager.remove(['instanceStartEndPositions64xyLow']);\n      }\n    }\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const {getPath} = this.props;\n    const attributeManager = this.getAttributeManager();\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n    }\n    this.updateAttribute({props, oldProps, changeFlags});\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      // this.state.paths only stores point positions in each path\n      const paths = props.data.map(getPath);\n      const bufferLayout = paths.map(path => path.length - 1);\n      const numInstances = bufferLayout.reduce((count, segments) => count + segments, 0);\n\n      this.setState({\n        paths,\n        numInstances,\n        bufferLayout\n      });\n      attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      rounded,\n      miterLimit,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      dashJustified\n    } = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        jointType: Number(rounded),\n        alignMode: Number(dashJustified),\n        widthScale,\n        miterLimit,\n        widthMinPixels,\n        widthMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    const SEGMENT_INDICES = [\n      // start corner\n      0,\n      2,\n      1,\n      // body\n      1,\n      2,\n      4,\n      1,\n      4,\n      3,\n      // end corner\n      3,\n      4,\n      5\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center, 1: right\n    // [2] role - 0: offset point 1: joint point\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0,\n      0,\n      1,\n      // start inner corner\n      0,\n      -1,\n      0,\n      // start outer corner\n      0,\n      1,\n      0,\n      // end inner corner\n      1,\n      -1,\n      0,\n      // end outer corner\n      1,\n      1,\n      0,\n      // bevel end corner\n      1,\n      0,\n      1\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: new Float32Array(SEGMENT_POSITIONS)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  // \"Experimental\" method indended to make it easier to support non-nested arrays in subclasses\n  _getPathLength(path) {\n    return path.length;\n  }\n\n  calculateStartPositions(attribute) {\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateEndPositions(attribute) {\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateInstanceStartEndPositions64xyLow(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const startPoint = path[ptIndex];\n        const endPoint = path[ptIndex + 1];\n        value[i++] = fp64LowPart(startPoint[0]);\n        value[i++] = fp64LowPart(startPoint[1]);\n        value[i++] = fp64LowPart(endPoint[0]);\n        value[i++] = fp64LowPart(endPoint[1]);\n      }\n    });\n  }\n\n  calculateLeftDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      let prevPoint = isClosed(path) ? path[path.length - 2] : path[0];\n\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0] - prevPoint[0];\n        value[i++] = point[1] - prevPoint[1];\n        value[i++] = point[2] - prevPoint[2] || 0;\n        prevPoint = point;\n      }\n    });\n  }\n\n  calculateRightDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        let nextPoint = path[ptIndex + 1];\n        if (!nextPoint) {\n          nextPoint = isClosed(path) ? path[1] : point;\n        }\n\n        value[i++] = nextPoint[0] - point[0];\n        value[i++] = nextPoint[1] - point[1];\n        value[i++] = nextPoint[2] - point[2] || 0;\n      }\n    });\n  }\n\n  calculateStrokeWidths(attribute) {\n    const {data, getWidth} = this.props;\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const width = getWidth(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = width;\n      }\n    });\n  }\n\n  calculateDashArrays(attribute) {\n    const {data, getDashArray} = this.props;\n    if (!getDashArray) {\n      return;\n    }\n\n    const {paths} = this.state;\n    const {value} = attribute;\n    let i = 0;\n    paths.forEach((path, index) => {\n      const dashArray = getDashArray(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = dashArray[0];\n        value[i++] = dashArray[1];\n      }\n    });\n  }\n\n  calculateColors(attribute) {\n    const {data, getColor} = this.props;\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pointColor = getColor(data[index], index);\n      if (isNaN(pointColor[3])) {\n        pointColor[3] = 255;\n      }\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pointColor[0];\n        value[i++] = pointColor[1];\n        value[i++] = pointColor[2];\n        value[i++] = pointColor[3];\n      }\n    });\n  }\n\n  // Override the default picking colors calculation\n  calculatePickingColors(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pickingColor = this.encodePickingColor(index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pickingColor[0];\n        value[i++] = pickingColor[1];\n        value[i++] = pickingColor[2];\n      }\n    });\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}