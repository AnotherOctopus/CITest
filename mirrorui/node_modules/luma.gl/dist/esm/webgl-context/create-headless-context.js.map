{"version":3,"sources":["../../../src/webgl-context/create-headless-context.js"],"names":["isBrowser","ERR_HEADLESSGL_LOAD","ERR_HEADLESSGL_NOT_AVAILABLE","ERR_HEADLESSGL_FAILED","createHeadlessContext","width","height","opts","onError","headlessGL","module","require","error","webgl1","webgl2","gl"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,qBAAtB;AAEA,SAAQC,mBAAR,QAAkC,4BAAlC;AAEA,IAAMC,+BACN,sEADA;AAGA,IAAMC,wBACN,sEADA,C,CAGA;;AACA,OAAO,SAASC,qBAAT,OAA+D;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,OAAU,QAAVA,OAAU;AACpE,MAAIC,UAAJ;;AACA,MAAI,CAACT,SAAL,EAAgB;AACd,QAAI;AACFS,mBAAaC,OAAOC,OAAP,CAAe,IAAf,CAAb;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACd,aAAOJ,kBAAWP,mBAAX,eAAmCW,KAAnC,EAAP;AACD;AACF;;AARmE,MAU7DC,MAV6D,GAU3CN,IAV2C,CAU7DM,MAV6D;AAAA,MAUrDC,MAVqD,GAU3CP,IAV2C,CAUrDO,MAVqD;;AAWpE,MAAIA,UAAU,CAACD,MAAf,EAAuB;AACrB,WAAOL,QAAQ,qCAAR,CAAP;AACD;;AACD,MAAI,CAACC,UAAL,EAAiB;AACf,WAAOD,QAAQN,4BAAR,CAAP;AACD;;AACD,MAAMa,KAAKN,WAAWJ,KAAX,EAAkBC,MAAlB,EAA0BC,IAA1B,CAAX;;AACA,MAAI,CAACQ,EAAL,EAAS;AACP,WAAOP,QAAQL,qBAAR,CAAP;AACD;;AACD,SAAOY,EAAP;AACD","sourcesContent":["/* eslint-disable quotes, no-console */\nimport isBrowser from '../utils/is-browser';\n\nimport {ERR_HEADLESSGL_LOAD} from '../webgl-utils/webgl-types';\n\nconst ERR_HEADLESSGL_NOT_AVAILABLE =\n'Failed to create WebGL context in Node.js, headless gl not available';\n\nconst ERR_HEADLESSGL_FAILED =\n'Failed to create WebGL context in Node.js, headless gl returned null';\n\n// Create headless gl context (for running under Node.js)\nexport function createHeadlessContext({width, height, opts, onError}) {\n  let headlessGL;\n  if (!isBrowser) {\n    try {\n      headlessGL = module.require('gl');\n    } catch (error) {\n      return onError(`${ERR_HEADLESSGL_LOAD}\\n${error}`);\n    }\n  }\n\n  const {webgl1, webgl2} = opts;\n  if (webgl2 && !webgl1) {\n    return onError('headless-gl does not support WebGL2');\n  }\n  if (!headlessGL) {\n    return onError(ERR_HEADLESSGL_NOT_AVAILABLE);\n  }\n  const gl = headlessGL(width, height, opts);\n  if (!gl) {\n    return onError(ERR_HEADLESSGL_FAILED);\n  }\n  return gl;\n}\n"],"file":"create-headless-context.js"}